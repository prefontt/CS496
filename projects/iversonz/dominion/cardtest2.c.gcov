        -:    0:Source:cardtest2.c
        -:    0:Graph:cardtest2.gcno
        -:    0:Data:cardtest2.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include <stdio.h>
        -:    3:#include "rngs.h"
        -:    4:#include <stdlib.h>
        -:    5:
        -:    6://gcc -fprofile-arcs -ftest-coverage -Wall -std=c99 dominion.c cardtest2.c rngs.c -o cardtest2 -lm -g
        -:    7:
        -:    8:
        -:    9:int zdi_assert(int a, char * string)
        -:   10:{
        3:   11:  if(a == 1)
        -:   12:  {
    #####:   13:    printf("Test Passed: \t %s \n\n\n", string);
    #####:   14:    return 0;
        -:   15:  }
        3:   16:  else if( a == 2)
        -:   17:  {
        3:   18:    printf("Test Failed: \t %s\n\n\n", string);
        3:   19:  }
        3:   20:  return 0;
        -:   21:
        3:   22:}
        -:   23:
        -:   24:
        -:   25:int main()
        -:   26:{
        -:   27:  int a, b, c;
        3:   28:  int randomSeed = 10;
        -:   29:  struct gameState game;
        -:   30:
        3:   31:  int cards[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};
        3:   32:  printf("\nCard Test 2\n-----------\n");
        -:   33:
        3:   34:  a = initializeGame(2,cards, randomSeed, &game);
        -:   35:
        3:   36:  b = numHandCards(&game);
        -:   37:
        3:   38:  cardEffect(smithy, 0, 0, 0, &game, 0, 0);
        -:   39:
        3:   40:  c = numHandCards(&game);
        3:   41:  b = b + 2; // add cards
        3:   42:  if(b == c) // make sure each have the same amount of cards
        -:   43:  {
    #####:   44:    zdi_assert(1, "Card Effect - Smithy");
    #####:   45:  }
        -:   46:  else
        -:   47:  {
        3:   48:    zdi_assert(2, "Card Effect - Smithy");
        -:   49:
        -:   50:  }
        -:   51:
        3:   52:return 0;
        -:   53:}
